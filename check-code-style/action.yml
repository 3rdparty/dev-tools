# The name of this file should be `action.yml` , `action.yaml` or `Dockerfile`.
# Should be run only on macOS or Ubuntu.

name: "Check Code Style"
desciption: "Check files for correct code style"

inputs:
  os:
    description: "Specify operating system on which this action will run"

runs:
  using: "composite"
  steps:
    - name: Install clang-format-13 if Ubuntu
      if: inputs.os == 'ubuntu-latest'
      run: |
        # Install Clang 13 (including clang-format-13) through LLVM's preferred mechanism:
        #   https://apt.llvm.org/
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 13
        rm ./llvm.sh
        sudo apt-get install clang-format-13
        sudo rm -rf /var/lib/apt/lists/*
        # Remove existing symlink to clang-format and replace it.
        sudo rm /etc/alternatives/clang-format
        sudo ln -s /usr/bin/clang-format-13 /etc/alternatives/clang-format
      shell: bash

    # On macOS we should install clang-format.
    - name: Install clang-format-13 if macOS
      if: inputs.os == 'macos-latest'
      run: |
        # TODO(benh): is 'brew' not in PATH on macOS like it is not in
        # the PATH for Linux? If so, where does GitHub install 'brew'
        # on a macOS runner?
        brew install clang-format@13
      shell: bash

    - name: Check all .cc , .h, .proto files for correct code style
      run: |
        chmod +x ${{ github.action_path }}/check_style_of_all_files.sh
        ${{ github.action_path }}/check_style_of_all_files.sh
      shell: bash

    - name: Install buildifier for .bzl files (macos)
      if: inputs.os == 'macos-latest'
      run: brew install buildifier
      shell: bash

    - name: Install buildifier for .bzl files (ubuntu)
      if: inputs.os == 'ubuntu-latest'
      run: /home/linuxbrew/.linuxbrew/bin/brew install buildifier
      shell: bash

    - name: Check all .bzl, .bazel files for correct code style
      # Since the `buildifier` binary used by `check_style_bzl.sh` is installed
      # by `brew`, and since `brew`'s binaries are not placed on the `$PATH` on
      # GitHub's machines, we must manualy put it on the path by `eval`ing
      # `brew shellenv`.
      run: |
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        chmod +x ${{ github.action_path }}/check_style_bzl.sh
        ${{ github.action_path }}/check_style_bzl.sh
      shell: bash

    # TODO(rjh): consider replacing this with 'dorny/paths-filter@v2' rather than us rolling our own
    # filter checking code.
    - name: Determine whether there are any Python files
      id: find-python
      # The incantation here will set the `found` output for this step to 'true'
      # if there is a *.py file in the path that the YAPF action would check.
      run: |
        if [[ -n $(find . -name *.py -not -path "**/submodules/**") ]]; then
          echo ::set-output name=found::true
        fi
      shell: bash

    - name: Run YAPF to test if Python code is correctly formatted
      # We only run YAPF when there are Python files to be checked, since YAPF
      # errors out when there aren't.
      if: steps.find-python.outputs.found == 'true'
      uses: AlexanderMelde/yapf-action@master
      with:
        args: --verbose --exclude '**/submodules/**'

    - name: Determine if isort is set up for this repo
      id: find-isort
      run: |
        ISORT_CONFIG_FILE_PATH='./.isort.cfg'
        if [ -f "$ISORT_CONFIG_FILE_PATH" ]; then
          echo ::set-output name=found::true
        fi
      shell: bash

    - name: Run isort to test if Python imports are correctly formatted
      if: steps.find-python.outputs.found == 'true' && steps.find-isort.outputs.found == 'true'
      uses: isort/isort-action@v1.1.0

    - name: Check JSON, YAML, Markdown, and more with Prettier
      uses: creyD/prettier_action@v4.2
      with:
        dry: True
        prettier_options: --check ./
